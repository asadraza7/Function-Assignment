{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"13otEgt2WcQyX4hxa_dV1mTpGsGQFv6wk","timestamp":1721971636545}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["(Q)1)Write a Python function that takes a list of numbers as input and returns the sum of all even numbers in\n","the list"],"metadata":{"id":"c7bEckv-jBLl"}},{"cell_type":"code","source":["#(Ans):-\n","def sum_of_even(numbers):\n","    even_numbers=[]\n","    for i in numbers:\n","        if i % 2 == 0:\n","            even_numbers.append(i)\n","    return sum(even_numbers)\n","sum_of_even([1,2,3,4,5,6,7,8,9,10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mxQCmZ6JlvLF","executionInfo":{"status":"ok","timestamp":1721889638634,"user_tz":-330,"elapsed":500,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"92cf00f1-bae6-49d8-b311-9a0e861cd0f9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["30"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["(Q)2)Create a Python function that accepts a string and returns the reverse of that string"],"metadata":{"id":"5C95qScLn-D6"}},{"cell_type":"code","source":["#(Ans):-\n","def reverse_string(string):\n","    return string[::-1]\n","reverse_string(\"Pwskills\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"iV--plEioEvz","executionInfo":{"status":"ok","timestamp":1721896379462,"user_tz":-330,"elapsed":590,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"42ca1d34-b20e-46e9-cde3-d4f6bf8e6571"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'sllikswP'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":108}]},{"cell_type":"markdown","source":["(Q)3)implement a Python function that takes a list of integers and returns a new list containing the squares of\n","each number"],"metadata":{"id":"XJ3KTQ4uqMyO"}},{"cell_type":"code","source":["#(Ans):-\n","def square_no(numbers):\n","    square_of_each=[]\n","    for i in numbers:\n","        square_of_each.append(i**2)\n","    return square_of_each\n","square_no([1,4,5,7,8,9])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I4AOhd35qZuO","executionInfo":{"status":"ok","timestamp":1721890675486,"user_tz":-330,"elapsed":659,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"5e19c9e3-38ff-4be8-e6f3-f359d3a6c801"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 16, 25, 49, 64, 81]"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["(Q)4)Write a Python function that checks if a given number is prime or not from 1 to 200"],"metadata":{"id":"7tOg977Us7TE"}},{"cell_type":"code","source":["#(Ans):-\n","def is_prime(numbers):\n","    for i in range(numbers):\n","        if numbers <= 1:\n","            return False\n","        else:\n","             return True"],"metadata":{"id":"OvqosWFgtIj8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","is_prime(200)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9NdLjOibw0eF","executionInfo":{"status":"ok","timestamp":1721893581903,"user_tz":-330,"elapsed":646,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"d3705924-61fa-45ef-fe7d-43838221523e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["is_prime(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i5jD4edFzm3K","executionInfo":{"status":"ok","timestamp":1721892795952,"user_tz":-330,"elapsed":621,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"f253544b-987c-4e06-cb55-0c4dbf83bb9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["(Q)5)Create an iterator class in Python that generates the Fibonacci sequence up to a specified number of\n","terms"],"metadata":{"id":"wBtkzbabzzNp"}},{"cell_type":"code","source":["#(Ans):-\n","def fib(n):\n","    a=0\n","    b=1\n","    for i in range(n):\n","        yield a\n","        a,b=b,a+b\n","fib(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ia2NXa-1z9iQ","executionInfo":{"status":"ok","timestamp":1721893685291,"user_tz":-330,"elapsed":509,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"2b313c6f-4a32-4509-9bfa-c250f335d976"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<generator object fib at 0x7f7af0180d60>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["a=fib(10)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jvdNJjjO1H5m","executionInfo":{"status":"ok","timestamp":1721893688127,"user_tz":-330,"elapsed":501,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"2d57dac1-fedd-4d70-e0d8-e52fc0d59197"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<generator object fib at 0x7f7af0180c80>"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r8dwSkuq1WMr","executionInfo":{"status":"ok","timestamp":1721893690439,"user_tz":-330,"elapsed":4,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"29392fb9-9c37-4e4d-f313-e3e0daa0a2ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mYtLvhwZ1YSf","executionInfo":{"status":"ok","timestamp":1721893691822,"user_tz":-330,"elapsed":7,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"116d5622-7e40-4140-ae35-62f9d81b6772"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dxlvCy0y2PBD","executionInfo":{"status":"ok","timestamp":1721893694071,"user_tz":-330,"elapsed":10,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"307b0e82-2325-4f00-f9eb-ff08dc88cb1d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QlDehbh82PWW","executionInfo":{"status":"ok","timestamp":1721893487458,"user_tz":-330,"elapsed":647,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"dece8767-473c-4155-9c58-fbaf3a6c2dd6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u03pvch12Pnr","executionInfo":{"status":"ok","timestamp":1721893489138,"user_tz":-330,"elapsed":3,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"c3d616a1-54dd-4e25-9776-9bffac8e0eb4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kcbcS8Uc2P4O","executionInfo":{"status":"ok","timestamp":1721893490505,"user_tz":-330,"elapsed":493,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"5db0229f-e12e-491b-c365-b1e0a72cd623"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KBSRY7oC2QH7","executionInfo":{"status":"ok","timestamp":1721893492385,"user_tz":-330,"elapsed":10,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"a02e303f-bdba-4f03-8611-43ff5e0c2063"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bZz3Fzs2QXU","executionInfo":{"status":"ok","timestamp":1721893495313,"user_tz":-330,"elapsed":484,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"a06199e8-ac08-4775-fcd4-b159a6119272"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vmA1ey_x2Qlg","executionInfo":{"status":"ok","timestamp":1721893497225,"user_tz":-330,"elapsed":6,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"5a778840-9ed9-4030-fc95-da35d854db9e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aso-zzG72Q0K","executionInfo":{"status":"ok","timestamp":1721893501880,"user_tz":-330,"elapsed":644,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"0fd07d04-c819-48ec-85bc-e8c42e9341d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["34"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["(Q)6) Write a generator function in Python that yields the powers of 2 up to a given exponent"],"metadata":{"id":"MPZF63Ua3mRn"}},{"cell_type":"code","source":["#(Ans):-\n","def pow_exponent(numbers):\n","    for i in range(numbers):\n","        yield i*2\n","pow_exponent(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ul8HpmXt2RRm","executionInfo":{"status":"ok","timestamp":1721896518985,"user_tz":-330,"elapsed":545,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"224d5e3f-b673-4e5f-e812-db45b6fa455c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<generator object pow_exponent at 0x7f7af0181c40>"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["a=pow_exponent(10)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NHFQB3V62Rf3","executionInfo":{"status":"ok","timestamp":1721896523131,"user_tz":-330,"elapsed":642,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"ed92caae-9cd3-47f8-a044-0cc6e61e5649"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<generator object pow_exponent at 0x7f7af01820a0>"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dxZgXJve7fVN","executionInfo":{"status":"ok","timestamp":1721896525692,"user_tz":-330,"elapsed":819,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"67317213-dce4-4721-f319-df79fae87ede"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GbJiBTIS7hax","executionInfo":{"status":"ok","timestamp":1721896527842,"user_tz":-330,"elapsed":7,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"732230ce-f695-42a2-f278-751c09c7f1a5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OyhPu2qF7jbk","executionInfo":{"status":"ok","timestamp":1721896530345,"user_tz":-330,"elapsed":818,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"ff1a9537-e55e-4f51-a4af-e4ca81c91fc3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n4s0yDz17lYR","executionInfo":{"status":"ok","timestamp":1721896531977,"user_tz":-330,"elapsed":8,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"48db7c1f-9dc1-482d-bc62-b3932afa7ccd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8d09xIwW7nJP","executionInfo":{"status":"ok","timestamp":1721896534125,"user_tz":-330,"elapsed":515,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"17eaec1b-34b9-4ca1-9773-9aa9d9dc50b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BIygC14b7o5c","executionInfo":{"status":"ok","timestamp":1721896534967,"user_tz":-330,"elapsed":4,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"0bea521a-4253-42ff-b262-3f8aadb2db73"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["next(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i-QT_pUXBTTM","executionInfo":{"status":"ok","timestamp":1721896536508,"user_tz":-330,"elapsed":8,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"06c286ae-8d33-400d-eb3e-ea4e50211bbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12"]},"metadata":{},"execution_count":127}]},{"cell_type":"markdown","source":["(Q)7)Implement a generator function that reads a file line by line and yields each line as a string"],"metadata":{"id":"ukk6a_FmCB6F"}},{"cell_type":"code","source":["#(Ans):-\n","def read_file_line_by_line(file_path):\n","    with open(file_path, 'r') as file:\n","        for line in file:\n","            yield line.strip()\n","\n","# Example\n","for line in read_file_line_by_line('large_file.txt'):\n","    print(line)"],"metadata":{"id":"uDRZjT00Ev7e","colab":{"base_uri":"https://localhost:8080/","height":578},"executionInfo":{"status":"error","timestamp":1721905465801,"user_tz":-330,"elapsed":531,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"da77b485-9793-4310-dfa9-11e68121b293"},"execution_count":null,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: 'large_file.txt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-166-b43a867be005>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Example\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mread_file_line_by_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'large_file.txt'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-166-b43a867be005>\u001b[0m in \u001b[0;36mread_file_line_by_line\u001b[0;34m(file_path)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#(Ans):-\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mread_file_line_by_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'r'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m             \u001b[0;32myield\u001b[0m \u001b[0mline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'large_file.txt'"]}]},{"cell_type":"markdown","source":["(Q)8)Use a lambda function in Python to sort a list of tuples based on the second element of each tuple"],"metadata":{"id":"tT55Qd7IEwQ5"}},{"cell_type":"code","source":["#(Ans):-\n","data=[(1,\"Apple\"),(2,\"orange\"),(3,\"banana\"),(4,\"grape\")]\n","Sorted_data=sorted(data,key=lambda x: x[1])"],"metadata":{"id":"BFfKOC1OE7W9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(Sorted_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qDasMLYjH7Ln","executionInfo":{"status":"ok","timestamp":1721898367327,"user_tz":-330,"elapsed":847,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"1a1f4bb0-57c4-40ad-9e7b-61d22296cf91"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(1, 'Apple'), (3, 'banana'), (4, 'grape'), (2, 'orange')]\n"]}]},{"cell_type":"markdown","source":["(Q)9)Write a Python program that uses `map()` to convert a list of temperatures from Celsius to Fahrenheit"],"metadata":{"id":"gPvUgCIKJhW_"}},{"cell_type":"code","source":["#(Ans):-\n","list_temp=[10,20,30,40]\n","def farhanite(celcius):\n","        return celcius*9/5+32\n","list(map(farhanite,list_temp))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DBUW4Hn0JqLt","executionInfo":{"status":"ok","timestamp":1721900126160,"user_tz":-330,"elapsed":13,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"cb9032d8-8291-47a3-f67b-3dbd36123ed6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[50.0, 68.0, 86.0, 104.0]"]},"metadata":{},"execution_count":156}]},{"cell_type":"markdown","source":["(Q)10) Create a Python program that uses `filter()` to remove all the vowels from a given string"],"metadata":{"id":"TbwaPdn9Qd9v"}},{"source":["str_vowels=\"aeiouAEIOU\"\n","string=\"Elephant are running\"\n","def vowels_str(vowels):\n","    result = \"\"\n","    for i in vowels:\n","        if i not in str_vowels:  # Check if character is NOT a vowel\n","            result += i  # Add it to the result if not a vowel\n","    return result  # Return the string without vowels\n","\n","list(filter(vowels_str,string))"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H008u28XXOEx","executionInfo":{"status":"ok","timestamp":1721902117125,"user_tz":-330,"elapsed":513,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"e0344c3a-5b96-40c0-b3d0-7e9f6008c03d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['l', 'p', 'h', 'n', 't', ' ', 'r', ' ', 'r', 'n', 'n', 'n', 'g']"]},"metadata":{},"execution_count":163}]},{"cell_type":"markdown","source":["(Q)11)Imagine an accounting routine used in a book shop. It works on a list with sublists, which look like this:\n","\n","\n","\n","\n","\n","\n","\n","Write a Python program, which returns a list with 2-tuples. Each tuple consists of the order number and the\n","product of the price per item and the quantity. The product should be increased by 10,- € if the value of the\n","order is smaller than 100,00 €.\n","\n","Write a Python program using lambda and map."],"metadata":{"id":"lJOsI_POZ_xP"}},{"cell_type":"code","source":["#(Ans):-\n","lis=[(order_no=34587,price_item=40.95,Quantity=4),(order_no=98762,price_item=56.80,Quantity=5),(order_no=77226,price_item=32.95,Quantity=3),(order_no=88112,price_item=24.99,Quantity=3)]\n","#Please provide solution for this Question.I don not understand the Q#"],"metadata":{"id":"-WkDBLZldWy4","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"error","timestamp":1721971417656,"user_tz":-330,"elapsed":597,"user":{"displayName":"Asad Raza","userId":"18380366987480511932"}},"outputId":"00537765-ae30-42bb-f00b-24d3657a7b0f"},"execution_count":10,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax. Maybe you meant '==' or ':=' instead of '='? (<ipython-input-10-fa57d48bf15b>, line 2)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-10-fa57d48bf15b>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    lis=[(order_no=34587,price_item=40.95,Quantity=4),(order_no=98762,price_item=56.80,Quantity=5),(order_no=77226,price_item=32.95,Quantity=3),(order_no=88112,price_item=24.99,Quantity=3)]\u001b[0m\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax. Maybe you meant '==' or ':=' instead of '='?\n"]}]}]}